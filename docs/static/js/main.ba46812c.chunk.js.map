{"version":3,"sources":["components/Mattress.js","components/FullWidthTabs.js","components/PrimaryAppBar.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","manttresMattressName","fontSize","manttresMattressPrice","opacity","Mattress","props","classes","useState","mattress","name","setname","price","setPrice","reviewRating","rating","setRating","useEffect","Grid","container","spacing","item","xs","lg","Typography","variant","className","style","textAlign","Rating","defaultValue","precision","size","readOnly","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","component","a11yProps","stars","display","flexDirection","marginTop","root","flexGrow","boxShadow","borderRadius","color","background","colorDefault","overflow","textColorPrimary","backgroundColor","height","FullWidthTabs","useTheme","React","valueTab","setValueTab","mattresses","classic","setClassic","loom","setLoom","zen","setZen","onClick","AppBar","position","elevation","Tabs","onChange","event","newValue","indicatorColor","aria-label","Tab","label","axis","direction","onChangeIndex","dir","grow","sectionDesktop","breakpoints","up","colorPrimary","padding","colorSecondary","PrimaryAppBar","cartItems","setCartItems","Container","fixed","maxWidth","disableGutters","Toolbar","xmlns","viewBox","data-name","d","fill","IconButton","Badge","badgeContent","mattressesContaner","contained","textShadow","lineHeight","Dashboard","data","setMattresses","currentMattress","setCurrentMattress","Fragment","src","alt","Button","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mrBAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,qBAAsB,CACpBC,SAAU,UAEZC,sBAAuB,CACrBD,SAAU,UACVE,QAAS,WAIE,SAASC,EAASC,GAC/B,IAAMC,EAAUT,IADsB,EAEdU,mBAASF,EAAMG,SAASC,MAFV,mBAE/BA,EAF+B,KAEzBC,EAFyB,OAGZH,mBAASF,EAAMG,SAASG,OAHZ,mBAG/BA,EAH+B,KAGxBC,EAHwB,OAIVL,mBAASF,EAAMG,SAASK,cAJd,mBAI/BC,EAJ+B,KAIvBC,EAJuB,KAYtC,OANAC,qBAAU,WACRN,EAAQL,EAAMG,SAASC,MACvBG,EAASP,EAAMG,SAASG,OACxBI,EAAUV,EAAMG,SAASK,gBACxB,CAACR,IAGF,kBAACY,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACC,EAAA,EAAD,CAAYC,QAAS,QAASC,UAAWnB,EAAQN,sBAC9CS,IAGL,kBAACQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGI,MAAO,CAAEC,UAAW,UAC3C,kBAACJ,EAAA,EAAD,CAAYC,QAAS,QAASC,UAAWnB,EAAQJ,uBAAjD,IACIS,IAGN,kBAACM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAII,MAAO,CAAEC,UAAW,UAC7C,kBAACC,EAAA,EAAD,CACEnB,KAAK,SACLoB,aAAcf,EACdgB,UAAW,GACXC,KAAK,QACLC,UAAQ,MClClB,SAASC,EAAS5B,GAAQ,IAChB6B,EAAqC7B,EAArC6B,SAAUC,EAA2B9B,EAA3B8B,MAAOC,EAAoB/B,EAApB+B,MAAUC,EADZ,YACsBhC,EADtB,8BAGvB,OACE,uCACEiC,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,8BAAyBJ,GAC3BK,kBAAA,yBAAmCL,IAC/BC,GACHF,IAAUC,GACT,kBAACM,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACpB,EAAA,EAAD,CAAYqB,UAAU,OAAOV,KAavC,SAASW,EAAUT,GACjB,MAAO,CACLI,GAAG,kBAAD,OAAoBJ,GACtB,gBAAgB,uBAAhB,OAAwCA,IAI5C,IAAMvC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+C,MAAO,CACLC,QAAS,OACTC,cAAe,SACf,YAAa,CACXC,UAAWlD,EAAMoB,QAAQ,KAG7B+B,KAAM,CACJC,SAAU,EACVC,UAAW,oCACXC,aAAc,GACdC,MAAO,yBACPC,WAAY,+CACZ,kDAAmD,CACjDA,WAAY,uDACZD,MAAO,sBAGXE,aAAc,CACZH,aAAc,iBACdE,WAAY,gFACZD,MAAO,qBACPG,SAAU,SACV,UAAW,CACTH,MAAO,0BAET,kDAAmD,CACjDC,WAAY,mFAGhBG,iBAAkB,CAChBC,gBAAiB,qBACjBC,OAAQ,OAIG,SAASC,EAAcxD,GACpC,IAAMC,EAAUT,IACVE,EAAQ+D,cAF6B,EAGXC,IAAMxD,SAAS,GAHJ,mBAGpCyD,EAHoC,KAG1BC,EAH0B,OAIb1D,mBAASF,EAAM6D,WAAWC,SAJb,mBAIpCA,EAJoC,KAI3BC,EAJ2B,OAKnB7D,mBAASF,EAAM6D,WAAWG,MALP,mBAKpCA,EALoC,KAK9BC,EAL8B,OAMrB/D,mBAASF,EAAM6D,WAAWK,KANL,mBAMpCA,EANoC,KAM/BC,EAN+B,KAQ3CxD,qBAAU,WACRoD,EAAW/D,EAAM6D,WAAWC,SAC5BG,EAAQjE,EAAM6D,WAAWG,MACzBG,EAAOnE,EAAM6D,WAAWK,OACvB,CAAClE,IAEJW,qBAAU,WACRX,EAAMoE,QAAQT,KACb,CAAC3D,EAAM2D,IAWV,OACE,yBAAKvC,UAAWnB,EAAQ4C,MACtB,kBAACwB,EAAA,EAAD,CACEC,SAAS,SACTrB,MAAM,UACNsB,UAAW,EACXtE,QAAS,CACPkD,aAAclD,EAAQkD,eAExB,kBAACqB,EAAA,EAAD,CACE1C,MAAO6B,EACPc,SApBa,SAACC,EAAOC,GAC3Bf,EAAYe,IAoBNC,eAAe,UACfzD,QAAQ,YACR0D,aAAW,sBACX,kBAACC,EAAA,EAAD,eAAKC,MAAM,YAAevC,EAAU,KACpC,kBAACsC,EAAA,EAAD,eAAKC,MAAM,SAAYvC,EAAU,KACjC,kBAACsC,EAAA,EAAD,eAAKC,MAAM,OAAUvC,EAAU,OAInC,kBAAC,IAAD,CACEwC,KAA0B,QAApBtF,EAAMuF,UAAsB,YAAc,IAChDlD,MAAO4B,EACPuB,cA7BoB,SAACnD,GACzB6B,EAAY7B,KA6BR,kBAACH,EAAD,CAAUE,MAAO6B,EAAU5B,MAAO,EAAGoD,IAAKzF,EAAMuF,WAC9C,kBAAClF,EAAD,CAAUI,SAAU2D,KAEtB,kBAAClC,EAAD,CAAUE,MAAO6B,EAAU5B,MAAO,EAAGoD,IAAKzF,EAAMuF,WAC9C,kBAAClF,EAAD,CAAUI,SAAU6D,KAEtB,kBAACpC,EAAD,CAAUE,MAAO6B,EAAU5B,MAAO,EAAGoD,IAAKzF,EAAMuF,WAC9C,kBAAClF,EAAD,CAAUI,SAAU+D,O,wDClIxB1E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0F,KAAM,CACJtC,SAAU,GAEZuC,eAAe,aACb3C,QAAS,QACRhD,EAAM4F,YAAYC,GAAG,MAAQ,CAC5B7C,QAAS,SAGb8C,aAAc,CACZtC,WAAY,iDACZD,MAAO,yBACPwC,QAAS,GACT,kDAAmD,CACjDvC,WAAY,0DACZD,MAAO,8BAGXyC,eAAgB,CACdpC,gBAAiB,qBACjB,kDAAmD,CACjDJ,WAAY,uBACZD,MAAO,oCAKE,SAAS0C,EAAc3F,GACpC,IAAMC,EAAUT,IAD2B,EAETU,mBAAS,GAFA,mBAEpC0F,EAFoC,KAEzBC,EAFyB,KAU3C,OALAlF,qBAAU,WACRkF,EAAa7F,EAAM4F,aAClB,CAAC5F,IAIF,kBAACqE,EAAA,EAAD,CACEC,SAAS,SACTlD,UAAWnB,EAAQmF,KACnBb,UAAW,EACXtE,QAAS,CACPuF,aAAcvF,EAAQuF,eAExB,kBAACM,EAAA,EAAD,CAAWC,OAAK,EAACC,SAAS,KAAKC,gBAAc,GAC3C,kBAACC,EAAA,EAAD,KACE,yBAAK9E,UAAU,QACb,yBAAK+E,MAAM,6BAA6BC,QAAQ,kBAC9C,kDACA,uBAAGjE,GAAG,UAAUkE,YAAU,WACxB,uBAAGlE,GAAG,YAAYkE,YAAU,WAC1B,0BACEC,EAAE,sTACFC,KAAK,YACP,0BACED,EAAE,kTACFC,KAAK,YACP,0BACED,EAAE,uHACFC,KAAK,YACP,0BACED,EAAE,2EACFC,KAAK,YACP,0BACED,EAAE,uTACFC,KAAK,YACP,0BACED,EAAE,saACFC,KAAK,gBAMf,yBAAKnF,UAAWnB,EAAQmF,OACxB,yBAAKhE,UAAWnB,EAAQoF,gBACtB,kBAACmB,EAAA,EAAD,CAAY3B,aAAW,mBAAmB5B,MAAM,WAC9C,kBAACwD,EAAA,EAAD,CACEC,aAAcd,EACd3C,MAAM,YACNhD,QAAS,CAAEyF,eAAgBzF,EAAQyF,iBACnC,kBAAC,IAAD,Y,YCjFVlG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiH,mBAAoB,CAClBlB,QAAS,GACT,uCAAwC,CACtCA,QAAS,KAGbmB,UAAW,CACThE,UAAW,GACXU,gBAAiB,uBACjBN,aAAc,GACdC,MAAO,UACP4D,WAAY,OACZC,WAAY,iBACZlH,SAAU,qBACV,UAAW,CACT0D,gBAAiB,iBACjBL,MAAO,2BAKE,SAAS8D,IACtB,IAAM9G,EAAUT,IADkB,EAEEU,mBAAS8G,EAAKnD,YAFhB,mBAE3BA,EAF2B,KAEfoD,EAFe,OAGA/G,mBAAS,GAHT,mBAG3B0F,EAH2B,KAGhBC,EAHgB,OAIY3F,mBAAS,WAJrB,mBAI3BgH,EAJ2B,KAIVC,EAJU,KAMlCxG,qBAAU,WACRsG,EAAcD,EAAKnD,YACnBgC,EAAa,KACZ,IAkBH,OACE,kBAAC,IAAMuB,SAAP,KACE,kBAACzB,EAAD,CAAeC,UAAWA,IAC1B,kBAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,SAAS,KAAK5E,UAAWnB,EAAQ0G,oBAChD,kBAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,yBACEoG,IAAK,YAAcH,EAAkB,OACrCI,IAAI,cAER,kBAAC1G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGI,MAAO,CAAEC,UAAW,SAC5C,kBAACJ,EAAA,EAAD,CAAYC,QAAS,MAArB,wBAEA,kBAACqC,EAAD,CACEK,WAAYA,EACZO,QA5BiB,SAACtC,GACjB,IAARA,GACDqF,EAAmB,WAEV,IAARrF,GACDqF,EAAmB,QAEV,IAARrF,GACDqF,EAAmB,UAsBb,kBAACvG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAII,MAAO,CAAEC,UAAW,UAC7C,kBAACiG,EAAA,EAAD,CACApF,GAAG,cACHL,MAAM,MACJX,QAAQ,YACR8B,MAAM,UACNmB,QAvCU,SAACM,GACvBmB,EAAaD,EAAU,IAuCX3F,QAAS,CAAE2G,UAAW3G,EAAQ2G,YANhC,oBCnECY,MARf,WACE,OACE,yBAAKpG,UAAU,OACb,kBAAC2F,EAAD,QCKcU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ba46812c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Rating from '@material-ui/lab/Rating'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme) => ({\n  manttresMattressName: {\n    fontSize: '1.4rem',\n  },\n  manttresMattressPrice: {\n    fontSize: '1.25rem',\n    opacity: '0.5',\n  },\n}))\n\nexport default function Mattress(props) {\n  const classes = useStyles()\n  const [name, setname] = useState(props.mattress.name)\n  const [price, setPrice] = useState(props.mattress.price)\n  const [rating, setRating] = useState(props.mattress.reviewRating)\n\n  useEffect(() => {\n    setname(props.mattress.name)\n    setPrice(props.mattress.price)\n    setRating(props.mattress.reviewRating)\n  }, [props])\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={8} lg={7}>\n        <Typography variant={'body1'} className={classes.manttresMattressName}>\n          {name}\n        </Typography>\n      </Grid>\n      <Grid item xs={4} lg={5} style={{ textAlign: 'right' }}>\n        <Typography variant={'body1'} className={classes.manttresMattressPrice}>\n          ${price}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} lg={12} style={{ textAlign: 'right' }}>\n        <Rating\n          name=\"rating\"\n          defaultValue={rating}\n          precision={0.1}\n          size=\"large\"\n          readOnly\n        />\n      </Grid>\n    </Grid>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport SwipeableViews from 'react-swipeable-views'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\n\nimport Box from '@material-ui/core/Box'\nimport Mattress from './Mattress'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography component=\"div\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  stars: {\n    display: 'flex',\n    flexDirection: 'column',\n    '& > * + *': {\n      marginTop: theme.spacing(1),\n    },\n  },\n  root: {\n    flexGrow: 1,\n    boxShadow: 'inset 0 -1px 2px rgba(0,0,0,0.12)',\n    borderRadius: 15,\n    color: 'var(--dark-main-color)',\n    background: 'linear-gradient(60deg, #ffffff, transparent)',\n    '@media screen and (prefers-color-scheme: dark) ': {\n      background: 'linear-gradient(60deg, rgba(0,0,0,0.3), transparent)',\n      color: 'var(--main-color)',\n    },\n  },\n  colorDefault: {\n    borderRadius: '15px 15px 0 0 ',\n    background: 'linear-gradient(60deg, var(--dark-main-color), var(--dark-main-color-washed))', \n    color: '#e6b417 !important',\n    overflow: 'hidden',\n    '&:hover': {\n      color: 'var(--dark-main-color)',\n    },\n    '@media screen and (prefers-color-scheme: dark) ': {\n      background: 'linear-gradient(60deg, var(--dark-secondary-color), var(--dark-warning-color))',\n    },\n  },\n  textColorPrimary: {\n    backgroundColor: 'var(--third-color)',\n    height: 4,\n  },\n}))\n\nexport default function FullWidthTabs(props) {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [valueTab, setValueTab] = React.useState(0)\n  const [classic, setClassic] = useState(props.mattresses.classic)\n  const [loom, setLoom] = useState(props.mattresses.loom)\n  const [zen, setZen] = useState(props.mattresses.zen)\n\n  useEffect(() => {\n    setClassic(props.mattresses.classic)\n    setLoom(props.mattresses.loom)\n    setZen(props.mattresses.zen)\n  }, [props])\n  \n  useEffect(() => {\n    props.onClick(valueTab)\n  }, [props,valueTab])\n\n  const handleChange = (event, newValue) => {\n    setValueTab(newValue)\n  }\n\n  const handleChangeIndex = (index) => {\n    setValueTab(index)\n    \n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={4}\n        classes={{\n          colorDefault: classes.colorDefault,\n        }}>\n        <Tabs\n          value={valueTab}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"Mattress Type Tabs\">\n          <Tab label=\" Classic\" {...a11yProps(0)} />\n          <Tab label=\"Loom \" {...a11yProps(1)} />\n          <Tab label=\"Zen\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={valueTab}\n        onChangeIndex={handleChangeIndex}>\n        <TabPanel value={valueTab} index={0} dir={theme.direction}>\n          <Mattress mattress={classic} />\n        </TabPanel>\n        <TabPanel value={valueTab} index={1} dir={theme.direction}>\n          <Mattress mattress={loom} />\n        </TabPanel>\n        <TabPanel value={valueTab} index={2} dir={theme.direction}>\n          <Mattress mattress={zen} />\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Badge from '@material-ui/core/Badge'\nimport Container from '@material-ui/core/Container'\n\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n    },\n  },\n  colorPrimary: {\n    background: 'linear-gradient(60deg,white,var(--main-color))',\n    color: 'var(--dark-main-color)',\n    padding: 10,\n    '@media screen and (prefers-color-scheme: dark) ': {\n      background: 'linear-gradient(60deg, var(--dark-main-color), #023475)',\n      color: 'var(--dark-warning-color)',\n    }\n  },\n  colorSecondary: {\n    backgroundColor: 'var(--third-color)',\n    '@media screen and (prefers-color-scheme: dark) ': {\n      background: 'var(--warning-color)',\n      color: 'var(--dark-secondary-color)'\n    }\n  },\n}))\n\nexport default function PrimaryAppBar(props) {\n  const classes = useStyles()\n  const [cartItems, setCartItems] = useState(0)\n\n  \n  useEffect(() => {\n    setCartItems(props.cartItems)\n  }, [props])  \n\n\n  return (\n    <AppBar\n      position=\"static\"\n      className={classes.grow}\n      elevation={2}\n      classes={{\n        colorPrimary: classes.colorPrimary,\n      }}>\n      <Container fixed maxWidth=\"xl\" disableGutters>\n        <Toolbar>\n          <div className=\"logo\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 180 38.263\">\n              <title>logo_saatva_new</title>\n              <g id=\"Layer_2\" data-name=\"Layer 2\">\n                <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n                  <path\n                    d=\"M59.844,37.484H54.926v-4.8a13.15,13.15,0,0,1-10.675,5.576c-8.517,0-15.413-6.956-15.413-16.193,0-9.295,6.957-16.252,15.533-16.252,8.756,0,15.473,7.137,15.473,16.252ZM44.371,10.5c-5.758,0-10.435,5.1-10.435,11.574s4.677,11.456,10.435,11.456c5.7,0,10.435-5.1,10.435-11.456C54.806,15.653,50.008,10.5,44.371,10.5Z\"\n                    fill=\"#c19678\"></path>\n                  <path\n                    d=\"M96.3,37.484H91.385v-4.8a13.15,13.15,0,0,1-10.674,5.576c-8.517,0-15.414-6.956-15.414-16.193,0-9.295,6.957-16.252,15.533-16.252,8.756,0,15.474,7.137,15.474,16.252ZM80.83,10.5c-5.757,0-10.435,5.1-10.435,11.574S75.073,33.526,80.83,33.526c5.7,0,10.435-5.1,10.435-11.456C91.265,15.653,86.467,10.5,80.83,10.5Z\"\n                    fill=\"#c19678\"></path>\n                  <path\n                    d=\"M115.01,37.484c-7.2.84-12.175-3.419-12.175-11.275V0h5.039V6.6h7.016v4.858h-7.016V26.209c0,5.458,3.3,6.837,7.136,6.6Z\"\n                    fill=\"#c19678\"></path>\n                  <path\n                    d=\"M119.235,6.6h5.4l8.516,24.109h.06L141.726,6.6h5.4L135.908,37.484h-5.457Z\"\n                    fill=\"#c19678\"></path>\n                  <path\n                    d=\"M180,37.484h-4.919v-4.8a13.15,13.15,0,0,1-10.674,5.576c-8.517,0-15.414-6.956-15.414-16.193,0-9.295,6.957-16.252,15.534-16.252C173.283,5.818,180,12.955,180,22.07ZM164.527,10.5c-5.758,0-10.436,5.1-10.436,11.574s4.678,11.456,10.436,11.456c5.7,0,10.435-5.1,10.435-11.456C174.962,15.653,170.164,10.5,164.527,10.5Z\"\n                    fill=\"#c19678\"></path>\n                  <path\n                    d=\"M0,33.218a19.382,19.382,0,0,0,13,4.937c6.774,0,11.151-3.651,11.151-9.3v-.09c0-4.814-2.806-7.372-10.009-9.124-6-1.421-7.636-2.516-7.636-5.092v-.09c0-2.283,2.17-3.877,5.276-3.877a14.285,14.285,0,0,1,8.545,3.2l2.829-3.987A17.269,17.269,0,0,0,11.867,5.924c-6.273,0-10.655,3.714-10.655,9.03v.09c0,5.707,3.661,7.673,10.416,9.305,5.54,1.278,7.229,2.436,7.229,4.956v.09c0,2.454-2.3,4.1-5.726,4.1-3.613,0-6.69-1.251-9.958-4.052Z\"\n                    fill=\"#c19678\"></path>\n                </g>\n              </g>\n            </svg>\n          </div>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge\n                badgeContent={cartItems}\n                color=\"secondary\"\n                classes={{ colorSecondary: classes.colorSecondary }}>\n                <ShoppingCartIcon />\n              </Badge>\n            </IconButton>\n          </div>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport FullWidthTabs from './FullWidthTabs'\nimport PrimaryAppBar from './PrimaryAppBar'\nimport data from './../data/mattresses.json'\n\n\nconst useStyles = makeStyles((theme) => ({\n  mattressesContaner: {\n    padding: 20,\n    '@media screen and (min-width: 600px)': {\n      padding: 50,\n    },\n  },\n  contained: {\n    marginTop: 40,\n    backgroundColor: 'var(--warning-color)',\n    borderRadius: 10,\n    color: '#282c34',\n    textShadow: 'none',\n    lineHeight: '1.5 !important',\n    fontSize: '1.05rem !important',\n    '&:hover': {\n      backgroundColor: 'rgb(255,190,0)',\n      color: '#282c34 !important',\n    },\n  },\n}))\n\nexport default function Dashboard() {\n  const classes = useStyles()\n  const [mattresses, setMattresses] = useState(data.mattresses)\n  const [cartItems, setCartItems] = useState(0)\n  const [currentMattress, setCurrentMattress] = useState('classic')\n\n  useEffect(() => {\n    setMattresses(data.mattresses)\n    setCartItems(0)\n  }, [])\n\n  const handleAddToCart = (event) => {\n    setCartItems(cartItems+1)\n  }\n  const handleMattressChange = (value) => {\n    if(value===0){\n      setCurrentMattress('classic')\n    }\n    if(value===1){\n      setCurrentMattress('loom')\n    }\n    if(value===2){\n      setCurrentMattress('zen')\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      <PrimaryAppBar cartItems={cartItems} />\n      <Container fixed maxWidth=\"xl\" className={classes.mattressesContaner}>\n        <Grid container spacing={8}>\n          <Grid item xs={12} lg={7}>\n            <img\n              src={'./images/' + currentMattress + '.jpg'}\n              alt=\"mattress\"></img>\n          </Grid>\n          <Grid item xs={12} lg={5} style={{ textAlign: 'left' }}>\n            <Typography variant={'h3'}>Choose Your Mattress</Typography>\n            {/* <Typography variant={'h6'}>Select Mattress Type</Typography> */}\n            <FullWidthTabs\n              mattresses={mattresses}\n              onClick={handleMattressChange}\n            />\n            <Grid item xs={12} lg={12} style={{ textAlign: 'right' }}>\n              <Button\n              id=\"add-to-cart\"\n              value=\"add\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleAddToCart}\n                classes={{ contained: classes.contained }}>\n                Add to Cart\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\n\nimport Dashboard  from './components/Dashboard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard/>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}