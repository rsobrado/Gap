{"ast":null,"code":"import _slicedToArray from\"/Users/labworxs-remote/Desktop/Gap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{makeStyles}from'@material-ui/core/styles';import Container from'@material-ui/core/Container';import Grid from'@material-ui/core/Grid';import Button from'@material-ui/core/Button';import Typography from'@material-ui/core/Typography';import FullWidthTabs from'./FullWidthTabs';import PrimaryAppBar from'./PrimaryAppBar';import data from'./../data/mattresses.json';var useStyles=makeStyles(function(theme){return{mattressesContaner:{padding:20,'@media screen and (min-width: 600px)':{padding:50}},contained:{marginTop:40,backgroundColor:'rgb(230,180,22)',borderRadius:10,color:'#282c34',textShadow:'none',lineHeight:'1.5 !important',fontSize:'1.05rem !important','&:hover':{backgroundColor:'rgb(255,190,0)',color:'#282c34 !important'}}};});export default function Dashboard(){var classes=useStyles();var _useState=useState(data.mattresses),_useState2=_slicedToArray(_useState,2),mattresses=_useState2[0],setMattresses=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),cartItems=_useState4[0],setCartItems=_useState4[1];var _useState5=useState('classic'),_useState6=_slicedToArray(_useState5,2),currentMattress=_useState6[0],setCurrentMattress=_useState6[1];useEffect(function(){setMattresses(data.mattresses);setCartItems(0);},[]);var handleAddToCart=function handleAddToCart(event){setCartItems(cartItems+1);};var handleMattressChange=function handleMattressChange(value){if(value===0){setCurrentMattress('classic');}if(value===1){setCurrentMattress('loom');}if(value===2){setCurrentMattress('zen');}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PrimaryAppBar,{cartItems:cartItems}),/*#__PURE__*/React.createElement(Container,{fixed:true,maxWidth:\"xl\",className:classes.mattressesContaner},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:8},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,lg:7},/*#__PURE__*/React.createElement(\"img\",{src:'./images/'+currentMattress+'.jpg',alt:\"mattress\"})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,lg:5,style:{textAlign:'left'}},/*#__PURE__*/React.createElement(Typography,{variant:'h3'},\"Choose Your Mattress\"),/*#__PURE__*/React.createElement(FullWidthTabs,{mattresses:mattresses,onClick:handleMattressChange}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,lg:12,style:{textAlign:'right'}},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:handleAddToCart,classes:{contained:classes.contained}},\"Add to Cart\"))))));}","map":{"version":3,"sources":["/Users/labworxs-remote/Desktop/Gap/src/components/Dashboard.js"],"names":["React","useState","useEffect","makeStyles","Container","Grid","Button","Typography","FullWidthTabs","PrimaryAppBar","data","useStyles","theme","mattressesContaner","padding","contained","marginTop","backgroundColor","borderRadius","color","textShadow","lineHeight","fontSize","Dashboard","classes","mattresses","setMattresses","cartItems","setCartItems","currentMattress","setCurrentMattress","handleAddToCart","event","handleMattressChange","value","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport FullWidthTabs from './FullWidthTabs'\nimport PrimaryAppBar from './PrimaryAppBar'\nimport data from './../data/mattresses.json'\n\n\nconst useStyles = makeStyles((theme) => ({\n  mattressesContaner: {\n    padding: 20,\n    '@media screen and (min-width: 600px)': {\n      padding: 50,\n    },\n  },\n  contained: {\n    marginTop: 40,\n    backgroundColor: 'rgb(230,180,22)',\n    borderRadius: 10,\n    color: '#282c34',\n    textShadow: 'none',\n    lineHeight: '1.5 !important',\n    fontSize: '1.05rem !important',\n    '&:hover': {\n      backgroundColor: 'rgb(255,190,0)',\n      color: '#282c34 !important',\n    },\n  },\n}))\n\nexport default function Dashboard() {\n  const classes = useStyles()\n  const [mattresses, setMattresses] = useState(data.mattresses)\n  const [cartItems, setCartItems] = useState(0)\n  const [currentMattress, setCurrentMattress] = useState('classic')\n\n  useEffect(() => {\n    setMattresses(data.mattresses)\n    setCartItems(0)\n  }, [])\n  const handleAddToCart = (event) => {\n    setCartItems(cartItems+1)\n  }\n  const handleMattressChange = (value) => {\n    if(value===0){\n      setCurrentMattress('classic')\n    }\n    if(value===1){\n      setCurrentMattress('loom')\n    }\n    if(value===2){\n      setCurrentMattress('zen')\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      <PrimaryAppBar cartItems={cartItems} />\n      <Container fixed maxWidth=\"xl\" className={classes.mattressesContaner}>\n        <Grid container spacing={8}>\n          <Grid item xs={12} lg={7}>\n            <img\n              src={'./images/' + currentMattress + '.jpg'}\n              alt=\"mattress\"></img>\n          </Grid>\n          <Grid item xs={12} lg={5} style={{ textAlign: 'left' }}>\n            <Typography variant={'h3'}>Choose Your Mattress</Typography>\n            {/* <Typography variant={'h6'}>Select Mattress Type</Typography> */}\n            <FullWidthTabs\n              mattresses={mattresses}\n              onClick={handleMattressChange}\n            />\n            <Grid item xs={12} lg={12} style={{ textAlign: 'right' }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleAddToCart}\n                classes={{ contained: classes.contained }}>\n                Add to Cart\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}